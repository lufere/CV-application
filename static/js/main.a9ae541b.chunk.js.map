{"version":3,"sources":["components/General.js","components/EditButton.js","components/Education.js","components/Experience.js","App.js","index.js"],"names":["General","props","handleChange","event","onChange","editing","type","name","value","email","phone","EditButton","finished","onClick","Education","educationList","education","map","school","i","editIndex","key","title","id","schoolName","studyTitle","studyStart","studyEnd","editSubmit","start","end","edit","delete","submit","Experience","experienceList","experience","work","companyName","position","tasks","workStart","workEnd","company","App","useState","setName","setEmail","setPhone","editGeneral","setEditGeneral","setSchoolName","setStudyTitle","setStudyStart","setStudyEnd","setEducation","educationIndex","setEducationIndex","setCompanyName","setPosition","setTasks","setWorkStart","setWorkEnd","setExperience","experienceIndex","setExperienceIndex","setFinished","finishedStatus","setFinishedStatus","target","checked","concat","index","parseInt","parentElement","newEducation","editedSchool","splice","console","log","newExperience","editedWork","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9ae541b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst General = props => {\n    function handleChange(event){\n        props.onChange(event);\n    }\n    if (props.editing){\n        return(\n            <section>\n                <form>\n                    <h2>General Information: </h2>\n                    <label>Name\n                        <input \n                            type = \"text\" \n                            name = \"name\"\n                            value = {props.name}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>E-mail: \n                        <input \n                            type = \"email\" \n                            name = \"email\"\n                            value = {props.email}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Phone number: \n                        <input \n                            type = \"tel\" \n                            name = \"phone\"\n                            value = {props.phone}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                </form>\n            </section>\n        );\n    }else{\n        return(\n            <section>\n                <h2>General Information: </h2>\n                <div>\n                    <h3>Name: </h3>\n                        <p>\n                            {props.name}                            \n                        </p>\n                    <h3>Email: </h3>\n                        <p>\n                            {props.email}\n                        </p>\n                    <h3>Phone: </h3>\n                        <p>\n                            {props.phone}\n                        </p>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default General","import React from \"react\";\n\nconst EditButton = props =>{\n    if(props.finished){\n        return(\n            <div></div>\n        );\n    }\n    return(\n        <input\n            type = \"button\"\n            value = {props.value}\n            onClick = {props.onClick}\n        />\n    );\n}\n\nexport default EditButton\n","import React from \"react\";\nimport EditButton from \"./EditButton\";\n\nconst Education = props => {\n    function handleChange(event){\n        props.onChange(event);\n    }\n\n    let educationList = props.education.map((school, i)=>{\n\t\t// console.log(props.editIndex);\n\t\t// console.log(i);\n        if(props.editIndex === i){\n            return(\n                <div key = {school.name+school.title} id = {i}>\n                    <label>School Name: \n                        <input\n                            type = \"text\" \n                            name = \"schoolName\"\n                            value = {props.schoolName}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Title: \n                        <input\n                            type = \"text\" \n                            name = \"studyTitle\"\n                            value = {props.studyTitle}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Start Date: \n                        <input\n                            type = \"date\" \n                            name = \"studyStart\"\n                            value = {props.studyStart}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>End Date: \n                        <input \n                            type = \"date\" \n                            name = \"studyEnd\"\n                            value = {props.studyEnd}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <EditButton\n                        type = \"button\"\n                        value = \"SUBMIT\"\n                        onClick = {props.editSubmit}\n                        finished = {props.finished}\n                    />\n            </div>\n            );\n        }else{\n            return(\n                <li key = {school.name+school.title} id = {i}>\n                    <p>\n                        {`Institution: ${school.name}, \n                        Title: ${school.title}, \n                        Start Date: ${school.start}\n                        End Date: ${school.end} `}\n                    </p>\n                    <EditButton\n                        type = \"button\"\n                        onClick = {props.edit} \n                        value = \"EDIT\"\n                        finished = {props.finished}\n                    />\n                    <EditButton\n                        type = \"button\"\n                        onClick = {props.delete}\n                        value = \"DELETE\"\n                        finished = {props.finished}\n                        />\n                </li>\n                // <li>{school.name+\", \"+school.title}</li>\n            );\n        }\n    })\n    if(props.editIndex === null && !props.finished){\n        return(\n            <section>\n                <form>\n                    <h2>Education</h2>\n                    <ul>\n                        {educationList}\n                    </ul>\n                        <label>School Name: \n                            <input\n                                type = \"text\" \n                                name = \"schoolName\"\n                                value = {props.schoolName}\n                                onChange = {handleChange}\n                            />\n                        </label>\n                        <label>Title: \n                            <input\n                                type = \"text\" \n                                name = \"studyTitle\"\n                                value = {props.studyTitle}\n                                onChange = {handleChange}\n                            />\n                        </label>\n                        <label>Start Date: \n                            <input\n                                type = \"date\" \n                                name = \"studyStart\"\n                                value = {props.studyStart}\n                                onChange = {handleChange}\n                            />\n                        </label>\n                        <label>End Date: \n                            <input \n                                type = \"date\" \n                                name = \"studyEnd\"\n                                value = {props.studyEnd}\n                                onChange = {handleChange}\n                            />\n                        </label>\n                        <EditButton\n                            type = \"button\"\n                            value = \"SUBMIT\"\n                            onClick = {props.submit}\n                            finished = {props.finished}\n                        />\n                </form>\n            </section>\n\t\t);\n\t}else{\n        return(\n            <section>\n                <form>\n                    <h2>Education</h2>\n                    <ul>\n                        {educationList}\n                    </ul>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default Education","import React from \"react\";\nimport EditButton from \"./EditButton\";\n\nconst Experience = props => {\n    function handleChange(event){\n        props.onChange(event);\n    }\n\n    let experienceList = props.experience.map((work, i)=>{\n        if(props.editIndex === i){\n            return(\n                <div key = {work.name+work.title} id = {i}>\n                    <label>Company Name: \n                        <input\n                            type = \"text\" \n                            name = \"companyName\"\n                            value = {props.companyName}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Title: \n                        <input\n                            type = \"text\" \n                            name = \"position\"\n                            value = {props.position}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Tasks/Responsibilities: \n                        <textarea\n                            name = \"tasks\"\n                            value = {props.tasks}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Start Date: \n                        <input\n                            type = \"date\" \n                            name = \"workStart\"\n                            value = {props.workStart}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>End Date: \n                        <input \n                            type = \"date\" \n                            name = \"workEnd\"\n                            value = {props.workEnd}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <EditButton\n                        type = \"button\"\n                        value = \"SUBMIT\"\n                        onClick = {props.editSubmit}\n                        finished = {props.finished}\n                    />\n            </div>\n            );\n            }\n        return(\n            <li key = {work.company+work.position} id = {i}>\n                <p>\n                    {\n                    `Company Name: ${work.company}, \n                    Title: ${work.position},\n                    Tasks/Responsibilities: ${work.tasks} ,\n                    Start Date: ${work.start}\n                    End Date: ${work.end} `\n                    }\n                </p>\n                <EditButton \n                    onClick = {props.edit}\n                    value = \"EDIT\"\n                    type = \"button\"\n                    finished = {props.finished}\n                />\n                <EditButton \n                    onClick = {props.delete}\n                    value = \"DELETE\"\n                    type = \"button\"\n                    finished = {props.finished}\n                />\n            </li>\n            // <li>{school.name+\", \"+school.title}</li>\n        );\n    })\n    \n    if(props.editIndex === null && !props.finished){\n        return(\n            <section>\n            <form>\n                <h2>Experience</h2>\n                <ul>\n                    {experienceList}\n                </ul>\n                    <label>Company Name: \n                        <input\n                            type = \"text\" \n                            name = \"companyName\"\n                            value = {props.companyName}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Title: \n                        <input\n                            type = \"text\" \n                            name = \"position\"\n                            value = {props.position}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Tasks/Resposibilities: \n                        <textarea\n                            name = \"tasks\"\n                            value = {props.tasks}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>Start Date: \n                        <input \n                            type = \"date\" \n                            name = \"workStart\"\n                            value = {props.workStart}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <label>End Date: \n                        <input \n                            type = \"date\" \n                            name = \"workEnd\"\n                            value = {props.workEnd}\n                            onChange = {handleChange}\n                        />\n                    </label>\n                    <input\n                        type = \"button\"\n                        value = \"SUBMIT\"\n                        onClick = {props.submit}\n                    />\n            </form>\n        </section>\n    );\n    }else{\n        return(\n            <section>\n                <form>\n                    <h2>Experience</h2>\n                    <ul>\n                        {experienceList}\n                    </ul>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default Experience","import React, { useState } from 'react';\nimport General from './components/General'\nimport Education from './components/Education'\nimport Experience from './components/Experience'\n\nconst App = props =>{\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [editGeneral, setEditGeneral] = useState(true);\n  const [schoolName, setSchoolName] = useState(\"\");\n  const [studyTitle, setStudyTitle] = useState(\"\");\n  const [studyStart, setStudyStart] = useState(\"\");\n  const [studyEnd, setStudyEnd] = useState(\"\");\n  const [education, setEducation] = useState([{name:\"ITH\", title: \"Mechatronics\", start: \"2013-07-08\", end: \"2017-12-15\"}]);\n  const [educationIndex, setEducationIndex] = useState(null);\n  const [companyName, setCompanyName] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [tasks, setTasks] = useState(\"\");\n  const [workStart, setWorkStart] = useState(\"\");\n  const [workEnd, setWorkEnd] = useState(\"\");\n  const [experience, setExperience] = useState([{company: \"F. Electronics\", position: \"Engineer\", tasks: \"Engineering stuff\", start: \"2013-07-08\", end: \"2017-12-15\"}]);\n  const [experienceIndex, setExperienceIndex] = useState(null);\n  const [finished, setFinished] = useState(false);\n  const [finishedStatus, setFinishedStatus] = useState(\"FINISH EDITING\");\n\n  function handleChange(event){\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === 'checkbox'? target.checked : target.value;\n\n    if(name === 'name') setName(value);\n    if(name === 'email') setEmail(value);\n    if(name === 'phone') setPhone(value);\n    if(name === 'schoolName')setSchoolName(value);\n    if(name === 'studyTitle')setStudyTitle(value);\n    if(name === 'studyStart')setStudyStart(value);\n    if(name === 'studyEnd')setStudyEnd(value);\n    if(name === 'companyName')setCompanyName(value);\n    if(name === 'position')setPosition(value);\n    if(name === 'tasks')setTasks(value);\n    if(name === 'workStart')setWorkStart(value);\n    if(name === 'workEnd')setWorkEnd(value);\n    // this.setState({\n    //   [name]: value,\n    // });\n  }\n\n  function handleEducationSubmit(){\n    const newEducation = education;\n    setEducation(newEducation.concat([{\n      name: schoolName,\n      title: studyTitle,\n      start: studyStart,\n      end: studyEnd,\n    }]));\n    setSchoolName('');\n    setStudyTitle('');\n    setStudyStart('');\n    setStudyEnd('');\n  }\n\n  function educationEdit(event){\n    let index = parseInt(event.target.parentElement.id);\n    let target = education[index];\n    setEducationIndex(index);\n    setSchoolName(target.name);\n    setStudyTitle(target.title);\n    setStudyStart(target.start);\n    setStudyEnd(target.end);\n  }\n\n  function educationEditSubmit(event){\n    let index = parseInt(event.target.parentElement.id);\n    const newEducation = [...education];\n    const editedSchool = {\n      name: schoolName,\n      title: studyTitle,\n      start: studyStart,\n      end: studyEnd,\n    }\n    newEducation.splice(index,1,editedSchool)\n    // console.log(newEducation);\n    setEducation(newEducation);\n    setSchoolName('');\n    setStudyTitle('');\n    setStudyStart('');\n    setStudyEnd('');\n    setEducationIndex(null);\n  }\n\n  function educationDelete(event){\n    console.log(editGeneral);\n    let index = parseInt(event.target.parentElement.id);\n    const newEducation = [...education];\n    newEducation.splice(index,1);\n    console.log(newEducation);\n    setEducation(newEducation);\n  }\n\n  function handleExperienceSubmit(){\n    const newExperience = experience;\n    setExperience(newExperience.concat([{\n      company: companyName,\n      position: position,\n      tasks: tasks,\n      start: workStart,\n      end: workEnd,\n    }]));\n    setCompanyName('');\n    setPosition('');\n    setTasks('');\n    setWorkStart('');\n    setWorkEnd('');\n  }\n\n  function experienceEdit(event){\n    let index = parseInt(event.target.parentElement.id);\n    let target = experience[index];\n    setExperienceIndex(index);\n    setCompanyName(target.company);\n    setPosition(target.position);\n    setTasks(target.tasks);\n    setWorkStart(target.workStart);\n    setWorkEnd(target.workEnd);\n  }\n\n  function experienceEditSubmit(event){\n    let index = parseInt(event.target.parentElement.id);\n    const newExperience = [...experience];\n    const editedWork = {\n      company: companyName,\n      position: position,\n      tasks: tasks,\n      start: workStart,\n      end: workEnd,\n    }\n    newExperience.splice(index,1,editedWork)\n    // console.log(newEducation);\n    setExperience(newExperience);\n    setCompanyName('');\n    setPosition('');\n    setTasks('');\n    setWorkStart('');\n    setWorkEnd('');\n    setExperienceIndex(null);\n  }\n\n  function experienceDelete(event){\n    let index = parseInt(event.target.parentElement.id);\n    const newExperience = [...experience];\n    newExperience.splice(index,1);\n    setExperience(newExperience);\n  }\n\n  function finishToggle(){\n    console.log(finishedStatus);\n    if(finishedStatus === \"FINISH EDITING\"){\n      setFinished(!finished);\n      setFinishedStatus('EDIT CV');\n      setEditGeneral(false);\n      setExperienceIndex(null);\n      setEducationIndex(null);\n      setSchoolName('');\n      setStudyTitle('');\n      setStudyStart('');\n      setStudyEnd('');\n      setCompanyName('');\n      setPosition('');\n      setTasks('');\n      setWorkStart('');\n      setWorkEnd('');\n    }\n    if(finishedStatus === \"EDIT CV\"){\n      setFinished(!finished);\n      setFinishedStatus('FINISH EDITING');\n      setEditGeneral(true);\n    }\n  }\n\n  return (\n    <div>\n      <General\n        onChange = {handleChange}\n        editing = {editGeneral}\n        name = {name}\n        email = {email}\n        phone = {phone}\n      />\n      <Education\n        onChange = {handleChange}\n        schoolName = {schoolName}\n        studyTitle = {studyTitle}\n        studyStart = {studyStart}\n        studyEnd = {studyEnd}\n        education = {education}\n        submit = {handleEducationSubmit}\n        edit = {educationEdit}\n        editIndex = {educationIndex}\n        editSubmit = {educationEditSubmit}\n        delete = {educationDelete}\n        finished = {finished}\n      />\n      <Experience\n        onChange = {handleChange}\n        companyName = {companyName}\n        position = {position}\n        tasks = {tasks}\n        workStart = {workStart}\n        workEnd = {workEnd}\n        experience = {experience}\n        submit = {handleExperienceSubmit}\n        edit = {experienceEdit}\n        editIndex = {experienceIndex}\n        editSubmit = {experienceEditSubmit}\n        delete = {experienceDelete}\n        finished = {finished}\n      />\n      <input\n        type = \"button\"\n        value = {finishedStatus}\n        className = \"finishEdit\"\n        onClick = {finishToggle}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}